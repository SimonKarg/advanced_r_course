---
title: "Intro to using R"
subtitle: "Workshop 1"
author: "Matt W. Loftis & Simon Tobias Karg"
date: "12 January 2023"
fontsize: 11pt
output: 
  beamer_presentation
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = T)
# opts_chunk$set(dev = 'pdf')
```

<!-- HOUR ONE MATERIAL -->

## Orientation

Give us minimum two workshops (*please!*) \pause

### Plan for today

1.  Inspiration & advise
2.  Basic practical operations in R
3.  Workflows with R
    -   Organizing your working folders
    -   Using `code` files
    -   Day-to-day use
    -   Presenting things with R

## How to switch to R

R is a *language* so it's only useful to *do something* \pause

### Some advice ([see also](https://epirhandbook.com/en/transition-to-r.html))

-   Don't *study* R -- Do something with it\
    (preferably maybe a new project/task) \pause
-   When learning new stuff, be *problem-driven*\
    (focus on your *personal* pain points) \pause
-   Don't hesitate to do steps in Stata! \pause
-   In sum:
    -   Start somewhere
    -   Start small
    -   Take only what you want

## Most important programming skill

\vspace*{-.5cm}

```{=tex}
\begin{figure}
    \scalebox{.15}{\includegraphics{book.jpg}}
  \end{figure}
```
## Sales pitch

### What makes R so great?

-   One *"tool"* for many steps in the scientific process:
    1.  Data collection / cleaning / organizing
    2.  Start-to-finish analysis
    3.  Presentation
-   [Respects a scientific workflow](https://docs.ropensci.org/targets/)
-   Great resources / community

## R for data management

-   [Scrape the web](https://rvest.tidyverse.org/) + [API integration](https://httr.r-lib.org/)
-   [Manage data archives](https://finnstats.com/index.php/2021/05/28/working-with-files-and-folders-in-r/)
-   [Interface with data warehouses](https://nhsrcommunity.com/sql-server-database-connections-in-r/)
-   Strong [data cleaning](https://dplyr.tidyverse.org/) & [reshaping tools](https://tidyr.tidyverse.org/)

## R for analysis

-   [Stats](https://moderndive.com/) (incl. Bayesian stats with [`Stan`](https://mc-stan.org/))
-   [Simulations](https://bookdown.org/rdpeng/rprogdatascience/simulation.html)\* (e.g. [bootstrap](https://moderndive.com/8-confidence-intervals.html), [sim study](https://onlinelibrary.wiley.com/doi/10.1002/sim.8086), etc.)
-   [Machine learning](https://www.manning.com/books/machine-learning-with-r-the-tidyverse-and-mlr)
-   [Text as data](https://www.tidytextmining.com/)

```{=tex}
\bigskip\bigskip
\footnotesize
```
\textit{*See: Chap. 4 in Christensen et al. (2019) Transparent and Reproducible Social Science Research. UC Press.}

## R for presentation

-   [RMarkdown](https://bookdown.org/yihui/rmarkdown/)
-   [Shiny](https://shiny.rstudio.com/)
-   [Visualization](https://socviz.co/) (esp. with [ggplot2](https://ggplot2.tidyverse.org/))

## The R community

-   [R-Bloggers](https://www.r-bloggers.com/)
-   [Bookdown](https://bookdown.org/)
-   [Posit](https://posit.co/) (makers of RStudio & [good cheatsheets](https://posit.co/resources/cheatsheets/))
-   Social media:
    -   Twitter: `#rstats`
    -   Reddit: `r/rstats`
    -   YouTube: [a](https://www.youtube.com/@JuliaSilge/videos) [few](https://www.youtube.com/@landeranalytics9162) [examples](https://www.youtube.com/@PositPBC)

<!-- HOUR TWO MATERIAL -->

## Some basics with R

-   We demonstrate two modes of using R
    -   Code files (i.e. `.R`)
    -   Markdown files (i.e. `.Rmd`)
-   Starting with code files (`.R`)
-   [A workflow can look many different ways](https://csgillespie.github.io/efficientR/workflow.html)

We strongly recommend using [*projects*](https://r4ds.had.co.nz/workflow-projects.html).\
\medskip Start by opening "`Workshop 1 - 12-01-23.Rproj`" in the base project folder

## Input/Output in R

### I/O $\Rightarrow$ Get data *into* & *out of* R

*open up* `01_IO_in_R.R`

## Getting some vocabulary straight

### `function(argument, option = value)`

-   `function` = predefined command
-   `argument` = object of command
-   `option` = function modifier
-   `value` = object of option

Functions can take multiple arguments & multiple options.\
Examine a function by typing `?function` in console.

## Getting some vocabulary straight

### `argument1 |> function(argument2, option = value)`

-   `|>` = pipe (see also: `%>%`)
-   Pipes *always* set the **first** argument
-   Above code is equal to:\
    `function(argument1, argument2, option = value)`
-   labeling arguments can be helpful\
    (e.g. `head(x = mydata)`)

## Reading `function` documentation

-   *Description* = basic purpose
-   *Usage* = syntax and option defaults
-   *Arguments* = description of arguments & options
-   *Details* = Notes on functionality (see only if needed)
-   *Value* = OUTPUT of the function
-   etc.

## Input/Output in R

Key libraries: [`rio`](https://github.com/leeper/rio) & [`readr`](https://readr.tidyverse.org/) (see also: [`haven`](https://haven.tidyverse.org/))

### key functions:

-   `ls()` - list of stuff in R's memory
-   `load` - open R-format data (i.e. `.rda` or `.rdata`)
-   `save` - save R-format data
-   `import` - `rio` function for opening almost anything
-   `export` - `rio` function for saving data in many formats
-   `read_csv` - `readr` function for opening `csv` files
-   `sink` - dump console output to file

## Viewing data

### See what you've got

*open up* `02_viewing_data.R`

## Viewing data

Key libraries: [`dplyr`](https://dplyr.tidyverse.org/)

### key functions:

-   `head`/`tail` - show first/last 6 rows of data
-   `View` - See full data in its own tab
-   `glimpse` - summarize data & variables
-   `as_tibble` - convert data frame $\Rightarrow$ tibble

## Objects, classes, etc.

## Basic plots / descriptives

<!-- HOUR THREE MATERIAL -->

## Working in RMarkdown

Rmarkdown is a powerful tool for combining code, text, and visualizations in a single document. It allows you to create documents that are reproducible, dynamic, and interactive. \pause

There's a ton of stuff to learn with rmarkdown. Get inspiration [here](https://rmarkdown.rstudio.com/index.html)

## Brief intro to RMarkdown

Rmarkdown documents have 3 basic ingredients

-   *a YAML header* - specifying general output options
-   *Text in markdown format* - any explanatory text you like to add, e.g. documentation
-   *Code chunks* - your R code (can also run python, Stan, ...)

## Work with an example

open up `example_rmd_file.Rmd` and `example_rmd_file.html`
